# "test_double_mut_loan"
=====
Body for: DefId(0:18 ~ owned_borrows[a1d0]::test_double_mut_loan)
bb0:
    StorageLive(_1)
    StorageLive(_2)
    StorageLive(_3)
    _3 = const "Can Side effects"
    _2 = &(*_3)
    _1 = <str as std::string::ToString>::to_string(move _2) -> [return: bb1, unwind continue]

bb1:
    StorageDead(_2)
    StorageDead(_3)
    StorageLive(_4)
    StorageLive(_5)
    StorageLive(_6)
    StorageLive(_7)
    _7 = &mut _1
    _6 = &_7
    _5 = &(*_6)
    _4 = take_double_mut_loan(move _5) -> [return: bb2, unwind: bb4]

bb2:
    StorageDead(_5)
    StorageDead(_7)
    StorageDead(_6)
    StorageDead(_4)
    _0 = const ()
    drop(_1) -> [return: bb3, unwind: bb5]

bb3:
    StorageDead(_1)
    return

bb4:
    drop(_1) -> [return: bb5, unwind terminate(cleanup)]

bb5:
    resume

=====
- data           : (Mutable  , Owned    , Local   , NonCopy, PartDrop, UserDef  ) {TempBorrow}
- Body: Output(Unit)     , NotConst , Safe  , Sync , Free       {NoArguments, HasTempBorrow}
- Stats: BodyStats {
    return_relations_signature: 0,
    return_relations_found: 0,
    arg_relations_signature: 0,
    arg_relations_found: 0,
    owned: OwnedStats {
        temp_borrow_count: 1,
        temp_borrow_mut_count: 0,
        temp_borrow_extended_count: 0,
        temp_borrow_mut_extended_count: 0,
        named_borrow_count: 0,
        named_borrow_mut_count: 0,
        two_phased_borrows: 0,
    },
}

