# "take_one"
- _animal: {Arg, Unused}
- Return: {Const, Unit, AllConst}

# "take_two"
- _animal_1: {Arg, Unused}
- _animal_2: {Arg, Unused}
- Return: {Const, Unit, AllConst}

# "pat_return_owned_arg"
- animal: {Arg, Returned}
- Return: {Argument}

=====
bb0:
    StorageLive(_2)
    StorageLive(_3)
    StorageLive(_4)
    _4 = &_1
    _3 = std::string::String::is_empty(move _4) -> [return: bb1, unwind: bb6]

bb1:
    switchInt(move _3) -> [0: bb3, otherwise: bb2]

bb2:
    StorageDead(_4)
    _2 = const ()
    StorageDead(_3)
    StorageDead(_2)
    StorageLive(_6)
    StorageLive(_7)
    _7 = const "hey"
    _6 = &(*_7)
    _0 = <str as std::string::ToString>::to_string(move _6) -> [return: bb4, unwind: bb6]

bb3:
    StorageDead(_4)
    _0 = move _1
    StorageDead(_3)
    StorageDead(_2)
    drop(_1) -> [return: bb5, unwind: bb7]

bb4:
    StorageDead(_6)
    StorageDead(_7)
    drop(_1) -> [return: bb5, unwind: bb7]

bb5:
    return

bb6:
    drop(_1) -> [return: bb7, unwind terminate(cleanup)]

bb7:
    resume


- location_map: {
    bb0[3]: BorrowData {
        reserve_location: bb0[3],
        activation_location: NotTwoPhase,
        kind: Shared,
        region: '?2,
        borrowed_place: _1,
        assigned_place: _4,
    },
}
- activation_map: {}
- local_map: {
    _1: {
        bw0,
    },
}
- locals_state_at_exit: AllAreInvalidated

- scope_info: {
    bb6[0]: [
        bw0,
    ],
    bb1[0]: [
        bw0,
    ],
}
# "pat_maybe_return_owned_arg_1"
- a: {Arg, Returned}
- Return: {Argument, Conditional}

