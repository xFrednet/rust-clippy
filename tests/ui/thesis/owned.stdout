# "take_one"
- _animal        : (Immutable, Owned    , Argument, NonCopy, NonDrop) {}
- Return (-, -, -, -, -) {Const, Unit, AllConst}

# "take_two"
- _animal_1      : (Immutable, Owned    , Argument, NonCopy, NonDrop) {}
- _animal_2      : (Immutable, Owned    , Argument, NonCopy, NonDrop) {}
- Return (-, -, -, -, -) {Const, Unit, AllConst}

# "pat_return_owned_arg"
- animal         : (Immutable, Owned    , Argument, NonCopy, NonDrop) {Returned}
- Return (-, -, -, -, -) {Argument}

# "pat_maybe_return_owned_arg_1"
'?2
- a              : (Immutable, Owned    , Argument, NonCopy, Drop   ) {Returned, TempBorrow}
- Return (-, -, -, -, -) {Argument, Conditional}

# "pat_maybe_return_owned_arg_1_test"
- a              : (Immutable, Owned    , Argument, Copy   , NonDrop) {Returned}
- Return (-, -, -, -, -) {Const, Argument, Conditional}

# "pat_maybe_return_owned_arg_2"
=====
bb0:
    StorageLive(_2)
    StorageLive(_3)
    StorageLive(_4)
    StorageLive(_5)
    _5 = &_1
    _4 = std::string::String::is_empty(move _5) -> [return: bb1, unwind: bb19]

bb1:
    switchInt(move _4) -> [0: bb3, otherwise: bb2]

bb2:
    StorageDead(_5)
    StorageLive(_7)
    StorageLive(_8)
    StorageLive(_9)
    _9 = const "hey"
    _8 = &(*_9)
    _7 = <str as std::string::ToString>::to_string(move _8) -> [return: bb7, unwind: bb19]

bb3:
    StorageDead(_5)
    StorageLive(_6)
    _6 = move _1
    drop(_2) -> [return: bb4, unwind: bb5]

bb4:
    _2 = move _6
    drop(_6) -> [return: bb6, unwind: bb19]

bb5:
    _2 = move _6
    drop(_6) -> [return: bb19, unwind terminate(cleanup)]

bb6:
    StorageDead(_6)
    _3 = const ()
    goto -> bb16

bb7:
    StorageDead(_8)
    drop(_2) -> [return: bb8, unwind: bb9]

bb8:
    _2 = move _7
    drop(_7) -> [return: bb10, unwind: bb19]

bb9:
    _2 = move _7
    drop(_7) -> [return: bb19, unwind terminate(cleanup)]

bb10:
    StorageDead(_7)
    StorageDead(_9)
    StorageLive(_10)
    StorageLive(_11)
    StorageLive(_12)
    StorageLive(_13)
    StorageLive(_14)
    StorageLive(_15)
    _33 = const _
    _15 = &(*_33)
    _14 = &(*_15)
    _13 = move _14 as &[&str] (PointerCoercion(Unsize))
    StorageDead(_14)
    StorageLive(_17)
    StorageLive(_18)
    StorageLive(_19)
    StorageLive(_20)
    StorageLive(_21)
    StorageLive(_22)
    StorageLive(_23)
    _23 = &_1
    _22 = &(*_23)
    _21 = core::fmt::rt::Argument::<'_>::new_debug::<std::string::String>(move _22) -> [return: bb11, unwind: bb19]

bb11:
    StorageDead(_22)
    _20 = [move _21]
    StorageDead(_21)
    _19 = &_20
    _18 = &(*_19)
    _17 = move _18 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize))
    StorageDead(_18)
    StorageLive(_24)
    StorageLive(_25)
    StorageLive(_26)
    StorageLive(_27)
    StorageLive(_28)
    StorageLive(_29)
    _29 = core::fmt::rt::Alignment::Unknown
    StorageLive(_30)
    _30 = core::fmt::rt::Count::Implied
    StorageLive(_31)
    _31 = core::fmt::rt::Count::Implied
    _28 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _29, const 4_u32, move _30, move _31) -> [return: bb12, unwind: bb19]

bb12:
    StorageDead(_31)
    StorageDead(_30)
    StorageDead(_29)
    _27 = [move _28]
    StorageDead(_28)
    _26 = &_27
    _25 = &(*_26)
    _24 = move _25 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))
    StorageDead(_25)
    StorageLive(_32)
    _32 = core::fmt::rt::UnsafeArg::new() -> [return: bb13, unwind: bb19]

bb13:
    _12 = std::fmt::Arguments::<'_>::new_v1_formatted(move _13, move _17, move _24, move _32) -> [return: bb14, unwind: bb19]

bb14:
    StorageDead(_32)
    StorageDead(_24)
    StorageDead(_17)
    StorageDead(_13)
    _11 = std::io::_print(move _12) -> [return: bb15, unwind: bb19]

bb15:
    StorageDead(_12)
    StorageDead(_27)
    StorageDead(_26)
    StorageDead(_23)
    StorageDead(_20)
    StorageDead(_19)
    StorageDead(_15)
    StorageDead(_11)
    _10 = const ()
    StorageDead(_10)
    _3 = const ()
    goto -> bb16

bb16:
    StorageDead(_4)
    StorageDead(_3)
    _0 = move _2
    drop(_2) -> [return: bb17, unwind: bb20]

bb17:
    StorageDead(_2)
    drop(_1) -> [return: bb18, unwind: bb21]

bb18:
    return

bb19:
    drop(_2) -> [return: bb20, unwind terminate(cleanup)]

bb20:
    drop(_1) -> [return: bb21, unwind terminate(cleanup)]

bb21:
    resume


- location_map: {
    bb0[4]: BorrowData {
        reserve_location: bb0[4],
        activation_location: NotTwoPhase,
        kind: Shared,
        region: '?9,
        borrowed_place: _1,
        assigned_place: _5,
    },
    bb10[20]: BorrowData {
        reserve_location: bb10[20],
        activation_location: NotTwoPhase,
        kind: Shared,
        region: '?18,
        borrowed_place: _1,
        assigned_place: _23,
    },
    bb11[3]: BorrowData {
        reserve_location: bb11[3],
        activation_location: NotTwoPhase,
        kind: Shared,
        region: '?22,
        borrowed_place: _20,
        assigned_place: _19,
    },
    bb12[5]: BorrowData {
        reserve_location: bb12[5],
        activation_location: NotTwoPhase,
        kind: Shared,
        region: '?26,
        borrowed_place: _27,
        assigned_place: _26,
    },
}
- activation_map: {}
- local_map: {
    _1: {
        bw0,
        bw1,
    },
    _20: {
        bw2,
    },
    _27: {
        bw3,
    },
}
- locals_state_at_exit: AllAreInvalidated

- scope_info: {
    bb19[0]: [
        bw0,
        bw1,
        bw2,
        bw3,
    ],
    bb1[0]: [
        bw0,
    ],
    bb15[0]: [
        bw1,
        bw2,
        bw3,
    ],
}
AnalysisInfo {
    body: Body {
        basic_blocks: BasicBlocks {
            basic_blocks: [
                BasicBlockData {
                    statements: [
                        StorageLive(_2),
                        StorageLive(_3),
                        StorageLive(_4),
                        StorageLive(_5),
                        _5 = &_1,
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:44:9: 44:21 (#0),
                                scope: scope[1],
                            },
                            kind: _4 = std::string::String::is_empty(move _5) -> [return: bb1, unwind: bb19],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:44:9: 44:21 (#0),
                                scope: scope[1],
                            },
                            kind: switchInt(move _4) -> [0: bb3, otherwise: bb2],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_5),
                        StorageLive(_7),
                        StorageLive(_8),
                        StorageLive(_9),
                        _9 = const "hey",
                        _8 = &(*_9),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:47:15: 47:32 (#0),
                                scope: scope[1],
                            },
                            kind: _7 = <str as std::string::ToString>::to_string(move _8) -> [return: bb7, unwind: bb19],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_5),
                        StorageLive(_6),
                        _6 = move _1,
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:45:9: 45:12 (#0),
                                scope: scope[1],
                            },
                            kind: drop(_2) -> [return: bb4, unwind: bb5],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        _2 = move _6,
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:45:15: 45:16 (#0),
                                scope: scope[1],
                            },
                            kind: drop(_6) -> [return: bb6, unwind: bb19],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        _2 = move _6,
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:45:15: 45:16 (#0),
                                scope: scope[1],
                            },
                            kind: drop(_6) -> [return: bb19, unwind terminate(cleanup)],
                        },
                    ),
                    is_cleanup: true,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_6),
                        _3 = const (),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:44:5: 49:6 (#0),
                                scope: scope[1],
                            },
                            kind: goto -> bb16,
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_8),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:47:9: 47:12 (#0),
                                scope: scope[1],
                            },
                            kind: drop(_2) -> [return: bb8, unwind: bb9],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        _2 = move _7,
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:47:31: 47:32 (#0),
                                scope: scope[1],
                            },
                            kind: drop(_7) -> [return: bb10, unwind: bb19],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        _2 = move _7,
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:47:31: 47:32 (#0),
                                scope: scope[1],
                            },
                            kind: drop(_7) -> [return: bb19, unwind terminate(cleanup)],
                        },
                    ),
                    is_cleanup: true,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_7),
                        StorageDead(_9),
                        StorageLive(_10),
                        StorageLive(_11),
                        StorageLive(_12),
                        StorageLive(_13),
                        StorageLive(_14),
                        StorageLive(_15),
                        _33 = const _,
                        _15 = &(*_33),
                        _14 = &(*_15),
                        _13 = move _14 as &[&str] (PointerCoercion(Unsize)),
                        StorageDead(_14),
                        StorageLive(_17),
                        StorageLive(_18),
                        StorageLive(_19),
                        StorageLive(_20),
                        StorageLive(_21),
                        StorageLive(_22),
                        StorageLive(_23),
                        _23 = &_1,
                        _22 = &(*_23),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:48:19: 48:25 (#5),
                                scope: scope[1],
                            },
                            kind: _21 = core::fmt::rt::Argument::<'_>::new_debug::<std::string::String>(move _22) -> [return: bb11, unwind: bb19],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_22),
                        _20 = [move _21],
                        StorageDead(_21),
                        _19 = &_20,
                        _18 = &(*_19),
                        _17 = move _18 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)),
                        StorageDead(_18),
                        StorageLive(_24),
                        StorageLive(_25),
                        StorageLive(_26),
                        StorageLive(_27),
                        StorageLive(_28),
                        StorageLive(_29),
                        _29 = core::fmt::rt::Alignment::Unknown,
                        StorageLive(_30),
                        _30 = core::fmt::rt::Count::Implied,
                        StorageLive(_31),
                        _31 = core::fmt::rt::Count::Implied,
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                                scope: scope[1],
                            },
                            kind: _28 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _29, const 4_u32, move _30, move _31) -> [return: bb12, unwind: bb19],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_31),
                        StorageDead(_30),
                        StorageDead(_29),
                        _27 = [move _28],
                        StorageDead(_28),
                        _26 = &_27,
                        _25 = &(*_26),
                        _24 = move _25 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize)),
                        StorageDead(_25),
                        StorageLive(_32),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                                scope: scope[2],
                            },
                            kind: _32 = core::fmt::rt::UnsafeArg::new() -> [return: bb13, unwind: bb19],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                                scope: scope[1],
                            },
                            kind: _12 = std::fmt::Arguments::<'_>::new_v1_formatted(move _13, move _17, move _24, move _32) -> [return: bb14, unwind: bb19],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_32),
                        StorageDead(_24),
                        StorageDead(_17),
                        StorageDead(_13),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#4),
                                scope: scope[1],
                            },
                            kind: _11 = std::io::_print(move _12) -> [return: bb15, unwind: bb19],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_12),
                        StorageDead(_27),
                        StorageDead(_26),
                        StorageDead(_23),
                        StorageDead(_20),
                        StorageDead(_19),
                        StorageDead(_15),
                        StorageDead(_11),
                        _10 = const (),
                        StorageDead(_10),
                        _3 = const (),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:44:5: 49:6 (#0),
                                scope: scope[1],
                            },
                            kind: goto -> bb16,
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_4),
                        StorageDead(_3),
                        _0 = move _2,
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:51:1: 51:2 (#0),
                                scope: scope[0],
                            },
                            kind: drop(_2) -> [return: bb17, unwind: bb20],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_2),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:51:1: 51:2 (#0),
                                scope: scope[0],
                            },
                            kind: drop(_1) -> [return: bb18, unwind: bb21],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:51:2: 51:2 (#0),
                                scope: scope[0],
                            },
                            kind: return,
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:51:1: 51:2 (#0),
                                scope: scope[0],
                            },
                            kind: drop(_2) -> [return: bb20, unwind terminate(cleanup)],
                        },
                    ),
                    is_cleanup: true,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:51:1: 51:2 (#0),
                                scope: scope[0],
                            },
                            kind: drop(_1) -> [return: bb21, unwind terminate(cleanup)],
                        },
                    ),
                    is_cleanup: true,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/owned.rs:42:1: 51:2 (#0),
                                scope: scope[0],
                            },
                            kind: resume,
                        },
                    ),
                    is_cleanup: true,
                },
            ],
            cache: Cache {
                predecessors: OnceLock(
                    [
                        [],
                        [
                            bb0,
                        ],
                        [
                            bb1,
                        ],
                        [
                            bb1,
                        ],
                        [
                            bb3,
                        ],
                        [
                            bb3,
                        ],
                        [
                            bb4,
                        ],
                        [
                            bb2,
                        ],
                        [
                            bb7,
                        ],
                        [
                            bb7,
                        ],
                        [
                            bb8,
                        ],
                        [
                            bb10,
                        ],
                        [
                            bb11,
                        ],
                        [
                            bb12,
                        ],
                        [
                            bb13,
                        ],
                        [
                            bb14,
                        ],
                        [
                            bb6,
                            bb15,
                        ],
                        [
                            bb16,
                        ],
                        [
                            bb17,
                        ],
                        [
                            bb0,
                            bb2,
                            bb4,
                            bb5,
                            bb8,
                            bb9,
                            bb10,
                            bb11,
                            bb12,
                            bb13,
                            bb14,
                        ],
                        [
                            bb16,
                            bb19,
                        ],
                        [
                            bb17,
                            bb20,
                        ],
                    ],
                ),
                switch_sources: OnceLock(
                    <uninit>,
                ),
                is_cyclic: OnceLock(
                    false,
                ),
                reverse_postorder: OnceLock(
                    [
                        bb0,
                        bb1,
                        bb3,
                        bb4,
                        bb6,
                        bb5,
                        bb2,
                        bb7,
                        bb8,
                        bb10,
                        bb11,
                        bb12,
                        bb13,
                        bb14,
                        bb15,
                        bb16,
                        bb17,
                        bb18,
                        bb9,
                        bb19,
                        bb20,
                        bb21,
                    ],
                ),
                dominators: OnceLock(
                    <uninit>,
                ),
            },
        },
        phase: Analysis(
            Initial,
        ),
        pass_count: 1,
        source: MirSource {
            instance: Item(
                DefId(0:12 ~ owned[50f7]::pat_maybe_return_owned_arg_2),
            ),
            promoted: None,
        },
        source_scopes: [
            SourceScopeData {
                span: tests/ui/thesis/owned.rs:42:1: 51:2 (#0),
                parent_scope: None,
                inlined: None,
                inlined_parent_scope: None,
                local_data: Set(
                    SourceScopeLocalData {
                        lint_root: HirId(DefId(0:12 ~ owned[50f7]::pat_maybe_return_owned_arg_2).0),
                        safety: Safe,
                    },
                ),
            },
            SourceScopeData {
                span: tests/ui/thesis/owned.rs:43:5: 51:2 (#0),
                parent_scope: Some(
                    scope[0],
                ),
                inlined: None,
                inlined_parent_scope: None,
                local_data: Set(
                    SourceScopeLocalData {
                        lint_root: HirId(DefId(0:12 ~ owned[50f7]::pat_maybe_return_owned_arg_2).0),
                        safety: Safe,
                    },
                ),
            },
            SourceScopeData {
                span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                parent_scope: Some(
                    scope[1],
                ),
                inlined: None,
                inlined_parent_scope: None,
                local_data: Set(
                    SourceScopeLocalData {
                        lint_root: HirId(DefId(0:12 ~ owned[50f7]::pat_maybe_return_owned_arg_2).0),
                        safety: BuiltinUnsafe,
                    },
                ),
            },
        ],
        coroutine: None,
        local_decls: [
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:42:47: 42:53 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    User(
                        Var(
                            VarBindingForm {
                                binding_mode: BindByValue(
                                    Not,
                                ),
                                opt_ty_info: Some(
                                    tests/ui/thesis/owned.rs:42:36: 42:42 (#0),
                                ),
                                opt_match_place: Some(
                                    (
                                        None,
                                        tests/ui/thesis/owned.rs:42:33: 42:34 (#0),
                                    ),
                                ),
                                pat_span: tests/ui/thesis/owned.rs:42:33: 42:34 (#0),
                            },
                        ),
                    ),
                ),
                ty: std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:42:33: 42:34 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    User(
                        Var(
                            VarBindingForm {
                                binding_mode: BindByValue(
                                    Not,
                                ),
                                opt_ty_info: None,
                                opt_match_place: None,
                                pat_span: tests/ui/thesis/owned.rs:43:9: 43:12 (#0),
                            },
                        ),
                    ),
                ),
                ty: std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:43:9: 43:12 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: (),
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:44:5: 49:6 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: bool,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:44:9: 44:21 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?30 std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:44:9: 44:10 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:45:15: 45:16 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:47:15: 47:32 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?31 str,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:47:15: 47:20 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: &'?32 str,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:47:15: 47:20 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: (),
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#4),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: (),
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#4),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: std::fmt::Arguments<'?33>,
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?34 [&'?35 str],
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:48:18: 48:26 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?36 [&'?37 str; 2_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:48:18: 48:26 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: &'?38 [&'?39 str; 2_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:48:18: 48:26 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: [&'?40 str; 2_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:48:18: 48:26 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?41 [core::fmt::rt::Argument<'?42>],
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?43 [core::fmt::rt::Argument<'?44>; 1_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: &'?45 [core::fmt::rt::Argument<'?46>; 1_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: [core::fmt::rt::Argument<'?47>; 1_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: core::fmt::rt::Argument<'?48>,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:48:19: 48:25 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?49 std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:48:19: 48:25 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: &'?50 std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:48:19: 48:25 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?51 [core::fmt::rt::Placeholder],
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?52 [core::fmt::rt::Placeholder; 1_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: &'?53 [core::fmt::rt::Placeholder; 1_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: [core::fmt::rt::Placeholder; 1_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: core::fmt::rt::Placeholder,
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: core::fmt::rt::Alignment,
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: core::fmt::rt::Count,
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: core::fmt::rt::Count,
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: core::fmt::rt::UnsafeArg,
                user_ty: None,
                source_info: SourceInfo {
                    span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &'?54 [&'?55 str; 2_usize],
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/owned.rs:48:18: 48:26 (#0),
                    scope: scope[1],
                },
            },
        ],
        user_type_annotations: [
            CanonicalUserTypeAnnotation {
                user_ty: Canonical {
                    value: TypeOf(
                        DefId(2:10173 ~ core[a9f5]::fmt::{impl#2}::new_v1_formatted),
                        UserArgs {
                            args: [
                                ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }),
                            ],
                            user_self_ty: Some(
                                UserSelfTy {
                                    impl_def_id: DefId(2:10169 ~ core[a9f5]::fmt::{impl#2}),
                                    self_ty: std::fmt::Arguments<ReBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrAnon })>,
                                },
                            ),
                        },
                    ),
                    max_universe: U0,
                    variables: [
                        CanonicalVarInfo {
                            kind: Region(
                                U0,
                            ),
                        },
                        CanonicalVarInfo {
                            kind: Region(
                                U0,
                            ),
                        },
                    ],
                },
                span: /home/xfrednet/.rustup/toolchains/nightly-2024-02-22-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#5),
                inferred_ty: FnDef(
                    DefId(2:10173 ~ core[a9f5]::fmt::{impl#2}::new_v1_formatted),
                    [
                    '?56,
                    ],
                ),
            },
            CanonicalUserTypeAnnotation {
                user_ty: Canonical {
                    value: TypeOf(
                        DefId(2:10095 ~ core[a9f5]::fmt::rt::{impl#1}::new_debug),
                        UserArgs {
                            args: [
                                ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }),
                                ^1,
                            ],
                            user_self_ty: Some(
                                UserSelfTy {
                                    impl_def_id: DefId(2:10087 ~ core[a9f5]::fmt::rt::{impl#1}),
                                    self_ty: core::fmt::rt::Argument<ReBound(DebruijnIndex(0), BoundRegion { var: 2, kind: BrAnon })>,
                                },
                            ),
                        },
                    ),
                    max_universe: U0,
                    variables: [
                        CanonicalVarInfo {
                            kind: Region(
                                U0,
                            ),
                        },
                        CanonicalVarInfo {
                            kind: Ty(
                                General(
                                    U0,
                                ),
                            ),
                        },
                        CanonicalVarInfo {
                            kind: Region(
                                U0,
                            ),
                        },
                    ],
                },
                span: tests/ui/thesis/owned.rs:48:19: 48:25 (#5),
                inferred_ty: FnDef(
                    DefId(2:10095 ~ core[a9f5]::fmt::rt::{impl#1}::new_debug),
                    [
                    '?57,
                    std::string::String,
                    ],
                ),
            },
        ],
        arg_count: 1,
        spread_arg: None,
        var_debug_info: [
            a => _1,
            ret => _2,
        ],
        span: tests/ui/thesis/owned.rs:42:1: 51:2 (#0),
        required_consts: [],
        is_polymorphic: false,
        injection_phase: None,
        tainted_by_errors: None,
        function_coverage_info: None,
    },
    def_id: DefId(0:12 ~ owned[50f7]::pat_maybe_return_owned_arg_2),
    cfg: {
        bb0: Linear(
            bb1,
        ),
        bb1: Condition {
            branches: [
                bb3,
                bb2,
            ],
        },
        bb2: Linear(
            bb7,
        ),
        bb3: Linear(
            bb4,
        ),
        bb4: Linear(
            bb6,
        ),
        bb5: Linear(
            bb19,
        ),
        bb6: Linear(
            bb16,
        ),
        bb7: Linear(
            bb8,
        ),
        bb8: Linear(
            bb10,
        ),
        bb9: Linear(
            bb19,
        ),
        bb10: Linear(
            bb11,
        ),
        bb11: Linear(
            bb12,
        ),
        bb12: Linear(
            bb13,
        ),
        bb13: Linear(
            bb14,
        ),
        bb14: Linear(
            bb15,
        ),
        bb15: Linear(
            bb16,
        ),
        bb16: Linear(
            bb17,
        ),
        bb17: Linear(
            bb18,
        ),
        bb18: Return,
        bb19: Linear(
            bb20,
        ),
        bb20: Linear(
            bb21,
        ),
        bb21: None,
    },
    loops: [],
    terms: {
        bb0: {
            _4: [],
        },
        bb2: {
            _7: [],
        },
        bb10: {
            _21: [
                _22,
            ],
        },
        bb11: {
            _28: [],
        },
        bb12: {
            _32: [],
        },
        bb13: {
            _12: [
                _13,
                _17,
                _24,
            ],
        },
        bb14: {
            _11: [],
        },
    },
    locals: {
        _0: LocalInfo {
            kind: Return,
            assign_count: 1,
            data: Local(
                _2,
            ),
        },
        _1: LocalInfo {
            kind: UserVar(
                "a",
                VarInfo(Immutable, Owned    , Argument, NonCopy, Drop   ),
            ),
            assign_count: 2,
            data: Argument,
        },
        _2: LocalInfo {
            kind: UserVar(
                "ret",
                VarInfo(Immutable, Owned    , Local   , NonCopy, Drop   ),
            ),
            assign_count: 4,
            data: Mixed,
        },
        _3: LocalInfo {
            kind: AnonVar,
            assign_count: 2,
            data: Const,
        },
        _4: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Computed,
        },
        _5: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Loan(
                _1,
            ),
        },
        _6: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Local(
                _1,
            ),
        },
        _7: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Computed,
        },
        _8: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Local(
                _9,
            ),
        },
        _9: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Const,
        },
        _10: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Const,
        },
        _11: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Computed,
        },
        _12: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Computed,
        },
        _13: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Cast(
                _14,
            ),
        },
        _14: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Local(
                _15,
            ),
        },
        _15: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Local(
                _33,
            ),
        },
        _16: LocalInfo {
            kind: Unused,
            assign_count: 0,
            data: Unresolved,
        },
        _17: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Cast(
                _18,
            ),
        },
        _18: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Local(
                _19,
            ),
        },
        _19: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Loan(
                _20,
            ),
        },
        _20: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Ctor(
                [
                    Local(
                        _21,
                    ),
                ],
            ),
        },
        _21: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Computed,
        },
        _22: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Local(
                _23,
            ),
        },
        _23: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Loan(
                _1,
            ),
        },
        _24: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Cast(
                _25,
            ),
        },
        _25: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Local(
                _26,
            ),
        },
        _26: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Loan(
                _27,
            ),
        },
        _27: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Ctor(
                [
                    Local(
                        _28,
                    ),
                ],
            ),
        },
        _28: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Computed,
        },
        _29: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Ctor(
                [],
            ),
        },
        _30: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Ctor(
                [],
            ),
        },
        _31: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Ctor(
                [],
            ),
        },
        _32: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Computed,
        },
        _33: LocalInfo {
            kind: AnonVar,
            assign_count: 1,
            data: Const,
        },
    },
}
'?9
'?18
- a              : (Immutable, Owned    , Argument, NonCopy, Drop   ) {DynamicDrop, MovedToVar, TempBorrow}
- ret            : (Immutable, Owned    , Local   , NonCopy, Drop   ) {Returned}
- Return (-, -, -, -, -) {}

# "pub_dynamic_drop_1"
- animal         : (Immutable, Owned    , Argument, NonCopy, Drop   ) {DynamicDrop, MovedToFn, ManualDrop}
- cond           : (Immutable, Owned    , Argument, Copy   , NonDrop) {}
- Return (-, -, -, -, -) {Const, Unit, AllConst}

