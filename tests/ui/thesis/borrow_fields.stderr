Body {
    params: [
        Param {
            hir_id: HirId(1),
            pat: Pat {
                hir_id: HirId(2),
                kind: Binding(
                    BindingAnnotation(
                        No,
                        Not,
                    ),
                    HirId(2),
                    input#0,
                    None,
                ),
                span: tests/ui/thesis/borrow_fields.rs:12:10: 12:15 (#0),
                default_binding_modes: true,
            },
            ty_span: tests/ui/thesis/borrow_fields.rs:12:17: 12:23 (#0),
            span: tests/ui/thesis/borrow_fields.rs:12:10: 12:23 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(19),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(3),
                        kind: If(
                            Expr {
                                hir_id: HirId(8),
                                kind: DropTemps(
                                    Expr {
                                        hir_id: HirId(4),
                                        kind: MethodCall(
                                            PathSegment {
                                                ident: is_empty#0,
                                                hir_id: HirId(5),
                                                res: Err,
                                                args: None,
                                                infer_args: true,
                                            },
                                            Expr {
                                                hir_id: HirId(6),
                                                kind: Path(
                                                    Resolved(
                                                        None,
                                                        Path {
                                                            span: tests/ui/thesis/borrow_fields.rs:13:8: 13:13 (#0),
                                                            res: Local(
                                                                HirId(2),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    ident: input#0,
                                                                    hir_id: HirId(7),
                                                                    res: Local(
                                                                        HirId(2),
                                                                    ),
                                                                    args: None,
                                                                    infer_args: true,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                span: tests/ui/thesis/borrow_fields.rs:13:8: 13:13 (#0),
                                            },
                                            [],
                                            tests/ui/thesis/borrow_fields.rs:13:14: 13:24 (#0),
                                        ),
                                        span: tests/ui/thesis/borrow_fields.rs:13:8: 13:24 (#0),
                                    },
                                ),
                                span: tests/ui/thesis/borrow_fields.rs:13:8: 13:24 (#4),
                            },
                            Expr {
                                hir_id: HirId(11),
                                kind: Block(
                                    Block {
                                        stmts: [],
                                        expr: Some(
                                            Expr {
                                                hir_id: HirId(9),
                                                kind: Lit(
                                                    Spanned {
                                                        node: Int(
                                                            Pu128(
                                                                19,
                                                            ),
                                                            Unsuffixed,
                                                        ),
                                                        span: tests/ui/thesis/borrow_fields.rs:14:9: 14:11 (#0),
                                                    },
                                                ),
                                                span: tests/ui/thesis/borrow_fields.rs:14:9: 14:11 (#0),
                                            },
                                        ),
                                        hir_id: HirId(10),
                                        rules: DefaultBlock,
                                        span: tests/ui/thesis/borrow_fields.rs:13:25: 15:6 (#0),
                                        targeted_by_break: false,
                                    },
                                    None,
                                ),
                                span: tests/ui/thesis/borrow_fields.rs:13:25: 15:6 (#0),
                            },
                            Some(
                                Expr {
                                    hir_id: HirId(12),
                                    kind: Block(
                                        Block {
                                            stmts: [],
                                            expr: Some(
                                                Expr {
                                                    hir_id: HirId(13),
                                                    kind: MethodCall(
                                                        PathSegment {
                                                            ident: len#0,
                                                            hir_id: HirId(14),
                                                            res: Err,
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                        Expr {
                                                            hir_id: HirId(15),
                                                            kind: Path(
                                                                Resolved(
                                                                    None,
                                                                    Path {
                                                                        span: tests/ui/thesis/borrow_fields.rs:16:9: 16:14 (#0),
                                                                        res: Local(
                                                                            HirId(2),
                                                                        ),
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: input#0,
                                                                                hir_id: HirId(16),
                                                                                res: Local(
                                                                                    HirId(2),
                                                                                ),
                                                                                args: None,
                                                                                infer_args: true,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ),
                                                            span: tests/ui/thesis/borrow_fields.rs:16:9: 16:14 (#0),
                                                        },
                                                        [],
                                                        tests/ui/thesis/borrow_fields.rs:16:15: 16:20 (#0),
                                                    ),
                                                    span: tests/ui/thesis/borrow_fields.rs:16:9: 16:20 (#0),
                                                },
                                            ),
                                            hir_id: HirId(17),
                                            rules: DefaultBlock,
                                            span: tests/ui/thesis/borrow_fields.rs:15:12: 17:6 (#0),
                                            targeted_by_break: false,
                                        },
                                        None,
                                    ),
                                    span: tests/ui/thesis/borrow_fields.rs:15:12: 17:6 (#0),
                                },
                            ),
                        ),
                        span: tests/ui/thesis/borrow_fields.rs:13:5: 17:6 (#0),
                    },
                ),
                hir_id: HirId(18),
                rules: DefaultBlock,
                span: tests/ui/thesis/borrow_fields.rs:12:34: 18:2 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: tests/ui/thesis/borrow_fields.rs:12:34: 18:2 (#0),
    },
}
fake_read: PlaceWithHirId {
    hir_id: HirId(1),
    place: Place {
        base_ty: std::string::String,
        base: Rvalue,
        projections: [],
    },
}

// Arguments are explicitly assigned in this from.
// HirId(1) therefore get's consumed and HirId(2) is assigned
===
mutate:    PlaceWithHirId {
    hir_id: HirId(2),
    place: Place {
        base_ty: std::string::String,
        base: Local(
            HirId(2),
        ),
        projections: [],
    },
}
===
consume:   PlaceWithHirId {
    hir_id: HirId(1),
    place: Place {
        base_ty: std::string::String,
        base: Rvalue,
        projections: [],
    },
}


// These copies are weird
===
copy:      PlaceWithHirId {
    hir_id: HirId(19),
    place: Place {
        base_ty: usize,
        base: Rvalue,
        projections: [],
    },
}
===
copy:      PlaceWithHirId {
    hir_id: HirId(3),
    place: Place {
        base_ty: usize,
        base: Rvalue,
        projections: [],
    },
}

===
copy:      PlaceWithHirId {
    hir_id: HirId(8),
    place: Place {
        base_ty: bool,
        base: Rvalue,
        projections: [],
    },
}
===

// Result of method call
copy:      PlaceWithHirId {
    hir_id: HirId(4),
    place: Place {
        base_ty: bool,
        base: Rvalue,
        projections: [],
    },
}

// Argument and references in a bad order
===
copy:      PlaceWithHirId {
    hir_id: HirId(6),
    place: Place {
        base_ty: &ReErased std::string::String,
        base: Rvalue,
        projections: [],
    },
}
===
borrow:    PlaceWithHirId {
    hir_id: HirId(6),
    place: Place {
        base_ty: std::string::String,
        base: Local(
            HirId(2),
        ),
        projections: [],
    },
}ImmBorrow

// Every HIR ID envoces a call. This is the block of the if expression
===
copy:      PlaceWithHirId {
    hir_id: HirId(11),
    place: Place {
        base_ty: usize,
        base: Rvalue,
        projections: [],
    },
}
===

// Constant `19`
copy:      PlaceWithHirId {
    hir_id: HirId(9),
    place: Place {
        base_ty: usize,
        base: Rvalue,
        projections: [],
    },
}
===
copy:      PlaceWithHirId {
    hir_id: HirId(12),
    place: Place {
        base_ty: usize,
        base: Rvalue,
        projections: [],
    },
}
===
copy:      PlaceWithHirId {
    hir_id: HirId(13),
    place: Place {
        base_ty: usize,
        base: Rvalue,
        projections: [],
    },
}
===
copy:      PlaceWithHirId {
    hir_id: HirId(15),
    place: Place {
        base_ty: &ReErased std::string::String,
        base: Rvalue,
        projections: [],
    },
}
===
borrow:    PlaceWithHirId {
    hir_id: HirId(15),
    place: Place {
        base_ty: std::string::String,
        base: Local(
            HirId(2),
        ),
        projections: [],
    },
}ImmBorrow
===
