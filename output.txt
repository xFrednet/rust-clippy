Building dependencies ... ok
tests/ui/thesis/unsafe_transmute.rs ... FAILED
tests/ui/thesis/simple_main.rs ... FAILED

FAILED TEST: tests/ui/thesis/unsafe_transmute.rs
command: CLIPPY_CONF_DIR="tests" "/home/gh-xFrednet/rust-clippy/target/debug/clippy-driver" "--error-format=json" "--emit=metadata" "-Aunused" "-Ainternal_features" "-Zui-testing" "-Zdeduplicate-diagnostics=no" "-Dwarnings" "-Ldependency=/home/gh-xFrednet/rust-clippy/target/debug/deps" "--extern=clippy_config=/home/gh-xFrednet/rust-clippy/target/debug/deps/libclippy_config-7f299fea6121e480.rlib" "--extern=clippy_lints=/home/gh-xFrednet/rust-clippy/target/debug/deps/libclippy_lints-c49fb13064b75e83.rlib" "--extern=clippy_utils=/home/gh-xFrednet/rust-clippy/target/debug/deps/libclippy_utils-466960a687a9f785.rlib" "--extern=futures=/home/gh-xFrednet/rust-clippy/target/debug/deps/libfutures-4eeffcd3ff55839d.rlib" "--extern=if_chain=/home/gh-xFrednet/rust-clippy/target/debug/deps/libif_chain-5d797ac9f9129784.rlib" "--extern=itertools=/home/gh-xFrednet/rust-clippy/target/debug/deps/libitertools-576d3b941e52be5b.rlib" "--extern=parking_lot=/home/gh-xFrednet/rust-clippy/target/debug/deps/libparking_lot-b0b249753c3bb4f4.rlib" "--extern=quote=/home/gh-xFrednet/rust-clippy/target/debug/deps/libquote-ef058f5d1df62926.rlib" "--extern=regex=/home/gh-xFrednet/rust-clippy/target/debug/deps/libregex-ea5e2c1a1eff4155.rlib" "--extern=serde=/home/gh-xFrednet/rust-clippy/target/debug/deps/libserde-46994066da460d0e.rlib" "--extern=serde_derive=/home/gh-xFrednet/rust-clippy/target/debug/deps/libserde_derive-c477962f0b67095f.so" "--extern=syn=/home/gh-xFrednet/rust-clippy/target/debug/deps/libsyn-ab8f9e3a42a07cab.rlib" "--extern=tokio=/home/gh-xFrednet/rust-clippy/target/debug/deps/libtokio-92be9484208ed85d.rlib" "--out-dir" "target/ui_test/tests/ui/thesis" "tests/ui/thesis/unsafe_transmute.rs" "--edition" "2021"

error: actual output differed from expected
Execute `cargo uibless` to update `tests/ui/thesis/unsafe_transmute.stderr` to the actual output
--- tests/ui/thesis/unsafe_transmute.stderr
+++ <stderr output>
+TODO: Handle projections (*_2)


error: actual output differed from expected
Execute `cargo uibless` to update `tests/ui/thesis/unsafe_transmute.stdout` to the actual output
--- tests/ui/thesis/unsafe_transmute.stdout
+++ <stdout output>
+TODO: Handle terminator: Terminator {
+    source_info: SourceInfo {
+        span: tests/ui/thesis/unsafe_transmute.rs:1:1: 10:2 (#0),
+        scope: scope[0],
+    },
+    kind: resume,
+}


full stderr:
TODO: Handle projections (*_2)

full stdout:
TODO: Handle terminator: Terminator {
    source_info: SourceInfo {
        span: tests/ui/thesis/unsafe_transmute.rs:1:1: 10:2 (#0),
        scope: scope[0],
    },
    kind: resume,
}



FAILED TEST: tests/ui/thesis/simple_main.rs
command: CLIPPY_CONF_DIR="tests" "/home/gh-xFrednet/rust-clippy/target/debug/clippy-driver" "--error-format=json" "--emit=metadata" "-Aunused" "-Ainternal_features" "-Zui-testing" "-Zdeduplicate-diagnostics=no" "-Dwarnings" "-Ldependency=/home/gh-xFrednet/rust-clippy/target/debug/deps" "--extern=clippy_config=/home/gh-xFrednet/rust-clippy/target/debug/deps/libclippy_config-7f299fea6121e480.rlib" "--extern=clippy_lints=/home/gh-xFrednet/rust-clippy/target/debug/deps/libclippy_lints-c49fb13064b75e83.rlib" "--extern=clippy_utils=/home/gh-xFrednet/rust-clippy/target/debug/deps/libclippy_utils-466960a687a9f785.rlib" "--extern=futures=/home/gh-xFrednet/rust-clippy/target/debug/deps/libfutures-4eeffcd3ff55839d.rlib" "--extern=if_chain=/home/gh-xFrednet/rust-clippy/target/debug/deps/libif_chain-5d797ac9f9129784.rlib" "--extern=itertools=/home/gh-xFrednet/rust-clippy/target/debug/deps/libitertools-576d3b941e52be5b.rlib" "--extern=parking_lot=/home/gh-xFrednet/rust-clippy/target/debug/deps/libparking_lot-b0b249753c3bb4f4.rlib" "--extern=quote=/home/gh-xFrednet/rust-clippy/target/debug/deps/libquote-ef058f5d1df62926.rlib" "--extern=regex=/home/gh-xFrednet/rust-clippy/target/debug/deps/libregex-ea5e2c1a1eff4155.rlib" "--extern=serde=/home/gh-xFrednet/rust-clippy/target/debug/deps/libserde-46994066da460d0e.rlib" "--extern=serde_derive=/home/gh-xFrednet/rust-clippy/target/debug/deps/libserde_derive-c477962f0b67095f.so" "--extern=syn=/home/gh-xFrednet/rust-clippy/target/debug/deps/libsyn-ab8f9e3a42a07cab.rlib" "--extern=tokio=/home/gh-xFrednet/rust-clippy/target/debug/deps/libtokio-92be9484208ed85d.rlib" "--out-dir" "target/ui_test/tests/ui/thesis" "tests/ui/thesis/simple_main.rs" "--edition" "2021"

error: actual output differed from expected
Execute `cargo uibless` to update `tests/ui/thesis/simple_main.stdout` to the actual output
--- tests/ui/thesis/simple_main.stdout
+++ <stdout output>
+TODO: Handle terminator: Terminator {
+    source_info: SourceInfo {
+        span: tests/ui/thesis/simple_main.rs:9:1: 20:2 (#0),
+        scope: scope[0],
+    },
+    kind: resume,
+}
+TODO: Handle terminator: Terminator {
+    source_info: SourceInfo {
+        span: tests/ui/thesis/simple_main.rs:20:1: 20:2 (#0),
+        scope: scope[1],
+    },
+    kind: drop(_2) -> [return: bb7, unwind terminate(cleanup)],
+}
+TODO: Handle terminator: Terminator {
+    source_info: SourceInfo {
+        span: tests/ui/thesis/simple_main.rs:20:1: 20:2 (#0),
+        scope: scope[1],
+    },
+    kind: drop(_2) -> [return: bb4, unwind: bb7],
+}
+TODO: Handle terminator: Terminator {
+    source_info: SourceInfo {
+        span: tests/ui/thesis/simple_main.rs:27:18: 27:19 (#0),
+        scope: scope[0],
+    },
+    kind: drop(_3) -> [return: bb2, unwind: bb5],
+}
+TODO: Handle terminator: Terminator {
+    source_info: SourceInfo {
+        span: tests/ui/thesis/simple_main.rs:29:1: 29:2 (#0),
+        scope: scope[0],
+    },
+    kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)],
+}
+BorrowAnalysis {
+    body: Body {
+        basic_blocks: BasicBlocks {
+            basic_blocks: [
+                BasicBlockData {
+                    statements: [
+                        StorageLive(_2),
+                        _2 = const 17_i32,
+                        StorageDead(_2),
+                        StorageLive(_3),
+                    ],
+                    terminator: Some(
+                        Terminator {
+                            source_info: SourceInfo {
+                                span: tests/ui/thesis/simple_main.rs:27:5: 27:18 (#0),
+                                scope: scope[0],
+                            },
+                            kind: _3 = std::string::String::new() -> [return: bb1, unwind: bb5],
+                        },
+                    ),
+                    is_cleanup: false,
+                },
+                BasicBlockData {
+                    statements: [],
+                    terminator: Some(
+                        Terminator {
+                            source_info: SourceInfo {
+                                span: tests/ui/thesis/simple_main.rs:27:18: 27:19 (#0),
+                                scope: scope[0],
+                            },
+                            kind: drop(_3) -> [return: bb2, unwind: bb5],
+                        },
+                    ),
+                    is_cleanup: false,
+                },
+                BasicBlockData {
+                    statements: [
+                        StorageDead(_3),
+                        StorageLive(_4),
+                        StorageLive(_5),
+                        _5 = &_1,
+                    ],
+                    terminator: Some(
+                        Terminator {
+                            source_info: SourceInfo {
+                                span: tests/ui/thesis/simple_main.rs:28:5: 28:16 (#0),
+                                scope: scope[0],
+                            },
+                            kind: _4 = std::string::String::len(move _5) -> [return: bb3, unwind: bb5],
+                        },
+                    ),
+                    is_cleanup: false,
+                },
+                BasicBlockData {
+                    statements: [
+                        StorageDead(_5),
+                        StorageDead(_4),
+                        _0 = const (),
+                    ],
+                    terminator: Some(
+                        Terminator {
+                            source_info: SourceInfo {
+                                span: tests/ui/thesis/simple_main.rs:29:1: 29:2 (#0),
+                                scope: scope[0],
+                            },
+                            kind: drop(_1) -> [return: bb4, unwind: bb6],
+                        },
+                    ),
+                    is_cleanup: false,
+                },
+                BasicBlockData {
+                    statements: [],
+                    terminator: Some(
+                        Terminator {
+                            source_info: SourceInfo {
+                                span: tests/ui/thesis/simple_main.rs:29:2: 29:2 (#0),
+                                scope: scope[0],
+                            },
+                            kind: return,
+                        },
+                    ),
+                    is_cleanup: false,
+                },
+                BasicBlockData {
+                    statements: [],
+                    terminator: Some(
+                        Terminator {
+                            source_info: SourceInfo {
+                                span: tests/ui/thesis/simple_main.rs:29:1: 29:2 (#0),
+                                scope: scope[0],
+                            },
+                            kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)],
+                        },
+                    ),
+                    is_cleanup: true,
+                },
+                BasicBlockData {
+                    statements: [],
+                    terminator: Some(
+                        Terminator {
+                            source_info: SourceInfo {
+                                span: tests/ui/thesis/simple_main.rs:25:1: 29:2 (#0),
+                                scope: scope[0],
+                            },
+                            kind: resume,
+                        },
+                    ),
+                    is_cleanup: true,
+                },
+            ],
+            cache: Cache {
+                predecessors: OnceLock(
+                    <uninit>,
+                ),
+                switch_sources: OnceLock(
+                    <uninit>,
+                ),
+                is_cyclic: OnceLock(
+                    <uninit>,
+                ),
+                reverse_postorder: OnceLock(
+                    <uninit>,
+                ),
+                dominators: OnceLock(
+                    <uninit>,
+                ),
+            },
+        },
+        phase: Analysis(
+            Initial,
+        ),
+        pass_count: 1,
+        source: MirSource {
+            instance: Item(
+                DefId(0:12 ~ simple_main[0912]::simple_ownership),
+            ),
+            promoted: None,
+        },
+        source_scopes: [
+            SourceScopeData {
+                span: tests/ui/thesis/simple_main.rs:25:1: 29:2 (#0),
+                parent_scope: None,
+                inlined: None,
+                inlined_parent_scope: None,
+                local_data: Set(
+                    SourceScopeLocalData {
+                        lint_root: HirId(DefId(0:12 ~ simple_main[0912]::simple_ownership).0),
+                        safety: Safe,
+                    },
+                ),
+            },
+        ],
+        coroutine: None,
+        local_decls: [
+            LocalDecl {
+                mutability: Mut,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: (),
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:25:35: 25:35 (#0),
+                    scope: scope[0],
+                },
+            },
+            LocalDecl {
+                mutability: Not,
+                local_info: Set(
+                    User(
+                        Var(
+                            VarBindingForm {
+                                binding_mode: BindByValue(
+                                    Not,
+                                ),
+                                opt_ty_info: Some(
+                                    tests/ui/thesis/simple_main.rs:25:28: 25:34 (#0),
+                                ),
+                                opt_match_place: Some(
+                                    (
+                                        None,
+                                        tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
+                                    ),
+                                ),
+                                pat_span: tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
+                            },
+                        ),
+                    ),
+                ),
+                ty: std::string::String,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
+                    scope: scope[0],
+                },
+            },
+            LocalDecl {
+                mutability: Not,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: i32,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:26:5: 26:7 (#0),
+                    scope: scope[0],
+                },
+            },
+            LocalDecl {
+                mutability: Not,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: std::string::String,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:27:5: 27:18 (#0),
+                    scope: scope[0],
+                },
+            },
+            LocalDecl {
+                mutability: Not,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: usize,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:28:5: 28:16 (#0),
+                    scope: scope[0],
+                },
+            },
+            LocalDecl {
+                mutability: Mut,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: &ReErased std::string::String,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:28:5: 28:10 (#0),
+                    scope: scope[0],
+                },
+            },
+        ],
+        user_type_annotations: [],
+        arg_count: 1,
+        spread_arg: None,
+        var_debug_info: [
+            owned => _1,
+        ],
+        span: tests/ui/thesis/simple_main.rs:25:1: 29:2 (#0),
+        required_consts: [],
+        is_polymorphic: false,
+        injection_phase: None,
+        tainted_by_errors: None,
+        function_coverage_info: None,
+    },
+    checked_bbs: {
+        bb0,
+        bb1,
+        bb5,
+    },
+    vars: [
+        ValueUsage {
+            mir_name: _0,
+            decl: LocalDecl {
+                mutability: Mut,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: (),
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:25:35: 25:35 (#0),
+                    scope: scope[0],
+                },
+            },
+            kind: Return,
+            uses: [],
+        },
+        ValueUsage {
+            mir_name: _1,
+            decl: LocalDecl {
+                mutability: Not,
+                local_info: Set(
+                    User(
+                        Var(
+                            VarBindingForm {
+                                binding_mode: BindByValue(
+                                    Not,
+                                ),
+                                opt_ty_info: Some(
+                                    tests/ui/thesis/simple_main.rs:25:28: 25:34 (#0),
+                                ),
+                                opt_match_place: Some(
+                                    (
+                                        None,
+                                        tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
+                                    ),
+                                ),
+                                pat_span: tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
+                            },
+                        ),
+                    ),
+                ),
+                ty: std::string::String,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
+                    scope: scope[0],
+                },
+            },
+            kind: UserDef(
+                "owned",
+            ),
+            uses: [],
+        },
+        ValueUsage {
+            mir_name: _2,
+            decl: LocalDecl {
+                mutability: Not,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: i32,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:26:5: 26:7 (#0),
+                    scope: scope[0],
+                },
+            },
+            kind: DiscardNonDrop,
+            uses: [
+                Assign(
+                    _2 = const 17_i32,
+                ),
+            ],
+        },
+        ValueUsage {
+            mir_name: _3,
+            decl: LocalDecl {
+                mutability: Not,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: std::string::String,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:27:5: 27:18 (#0),
+                    scope: scope[0],
+                },
+            },
+            kind: DiscardNonDrop,
+            uses: [
+                AssignFromCall(
+                    _3 = std::string::String::new() -> [return: bb1, unwind: bb5],
+                ),
+            ],
+        },
+        ValueUsage {
+            mir_name: _4,
+            decl: LocalDecl {
+                mutability: Not,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: usize,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:28:5: 28:16 (#0),
+                    scope: scope[0],
+                },
+            },
+            kind: Unknown,
+            uses: [],
+        },
+        ValueUsage {
+            mir_name: _5,
+            decl: LocalDecl {
+                mutability: Mut,
+                local_info: Set(
+                    Boring,
+                ),
+                ty: &ReErased std::string::String,
+                user_ty: None,
+                source_info: SourceInfo {
+                    span: tests/ui/thesis/simple_main.rs:28:5: 28:10 (#0),
+                    scope: scope[0],
+                },
+            },
+            kind: Unknown,
+            uses: [],
+        },
+    ],
+}
+bb0:
+    StorageLive(_2)
+    _2 = const 17_i32
+    StorageDead(_2)
+    StorageLive(_3)
+    _3 = std::string::String::new() -> [return: bb1, unwind: bb5]
+
+bb1:
+    drop(_3) -> [return: bb2, unwind: bb5]
+
+bb2:
+    StorageDead(_3)
+    StorageLive(_4)
+    StorageLive(_5)
+    _5 = &_1
+    _4 = std::string::String::len(move _5) -> [return: bb3, unwind: bb5]
+
+bb3:
+    StorageDead(_5)
+    StorageDead(_4)
+    _0 = const ()
+    drop(_1) -> [return: bb4, unwind: bb6]
+
+bb4:
+    return
+
+bb5:
+    drop(_1) -> [return: bb6, unwind terminate(cleanup)]
+
+bb6:
+    resume
+
+# Variables
+  _0: Return
+  _1: UserDef("owned")
+  _2: DiscardNonDrop
+  _3: DiscardNonDrop
+  _4: Unknown
+  _5: Unknown


full stderr:

full stdout:
TODO: Handle terminator: Terminator {
    source_info: SourceInfo {
        span: tests/ui/thesis/simple_main.rs:9:1: 20:2 (#0),
        scope: scope[0],
    },
    kind: resume,
}
TODO: Handle terminator: Terminator {
    source_info: SourceInfo {
        span: tests/ui/thesis/simple_main.rs:20:1: 20:2 (#0),
        scope: scope[1],
    },
    kind: drop(_2) -> [return: bb7, unwind terminate(cleanup)],
}
TODO: Handle terminator: Terminator {
    source_info: SourceInfo {
        span: tests/ui/thesis/simple_main.rs:20:1: 20:2 (#0),
        scope: scope[1],
    },
    kind: drop(_2) -> [return: bb4, unwind: bb7],
}
TODO: Handle terminator: Terminator {
    source_info: SourceInfo {
        span: tests/ui/thesis/simple_main.rs:27:18: 27:19 (#0),
        scope: scope[0],
    },
    kind: drop(_3) -> [return: bb2, unwind: bb5],
}
TODO: Handle terminator: Terminator {
    source_info: SourceInfo {
        span: tests/ui/thesis/simple_main.rs:29:1: 29:2 (#0),
        scope: scope[0],
    },
    kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)],
}
BorrowAnalysis {
    body: Body {
        basic_blocks: BasicBlocks {
            basic_blocks: [
                BasicBlockData {
                    statements: [
                        StorageLive(_2),
                        _2 = const 17_i32,
                        StorageDead(_2),
                        StorageLive(_3),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/simple_main.rs:27:5: 27:18 (#0),
                                scope: scope[0],
                            },
                            kind: _3 = std::string::String::new() -> [return: bb1, unwind: bb5],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/simple_main.rs:27:18: 27:19 (#0),
                                scope: scope[0],
                            },
                            kind: drop(_3) -> [return: bb2, unwind: bb5],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_3),
                        StorageLive(_4),
                        StorageLive(_5),
                        _5 = &_1,
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/simple_main.rs:28:5: 28:16 (#0),
                                scope: scope[0],
                            },
                            kind: _4 = std::string::String::len(move _5) -> [return: bb3, unwind: bb5],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [
                        StorageDead(_5),
                        StorageDead(_4),
                        _0 = const (),
                    ],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/simple_main.rs:29:1: 29:2 (#0),
                                scope: scope[0],
                            },
                            kind: drop(_1) -> [return: bb4, unwind: bb6],
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/simple_main.rs:29:2: 29:2 (#0),
                                scope: scope[0],
                            },
                            kind: return,
                        },
                    ),
                    is_cleanup: false,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/simple_main.rs:29:1: 29:2 (#0),
                                scope: scope[0],
                            },
                            kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)],
                        },
                    ),
                    is_cleanup: true,
                },
                BasicBlockData {
                    statements: [],
                    terminator: Some(
                        Terminator {
                            source_info: SourceInfo {
                                span: tests/ui/thesis/simple_main.rs:25:1: 29:2 (#0),
                                scope: scope[0],
                            },
                            kind: resume,
                        },
                    ),
                    is_cleanup: true,
                },
            ],
            cache: Cache {
                predecessors: OnceLock(
                    <uninit>,
                ),
                switch_sources: OnceLock(
                    <uninit>,
                ),
                is_cyclic: OnceLock(
                    <uninit>,
                ),
                reverse_postorder: OnceLock(
                    <uninit>,
                ),
                dominators: OnceLock(
                    <uninit>,
                ),
            },
        },
        phase: Analysis(
            Initial,
        ),
        pass_count: 1,
        source: MirSource {
            instance: Item(
                DefId(0:12 ~ simple_main[0912]::simple_ownership),
            ),
            promoted: None,
        },
        source_scopes: [
            SourceScopeData {
                span: tests/ui/thesis/simple_main.rs:25:1: 29:2 (#0),
                parent_scope: None,
                inlined: None,
                inlined_parent_scope: None,
                local_data: Set(
                    SourceScopeLocalData {
                        lint_root: HirId(DefId(0:12 ~ simple_main[0912]::simple_ownership).0),
                        safety: Safe,
                    },
                ),
            },
        ],
        coroutine: None,
        local_decls: [
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: (),
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:25:35: 25:35 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    User(
                        Var(
                            VarBindingForm {
                                binding_mode: BindByValue(
                                    Not,
                                ),
                                opt_ty_info: Some(
                                    tests/ui/thesis/simple_main.rs:25:28: 25:34 (#0),
                                ),
                                opt_match_place: Some(
                                    (
                                        None,
                                        tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
                                    ),
                                ),
                                pat_span: tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
                            },
                        ),
                    ),
                ),
                ty: std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: i32,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:26:5: 26:7 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:27:5: 27:18 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: usize,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:28:5: 28:16 (#0),
                    scope: scope[0],
                },
            },
            LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &ReErased std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:28:5: 28:10 (#0),
                    scope: scope[0],
                },
            },
        ],
        user_type_annotations: [],
        arg_count: 1,
        spread_arg: None,
        var_debug_info: [
            owned => _1,
        ],
        span: tests/ui/thesis/simple_main.rs:25:1: 29:2 (#0),
        required_consts: [],
        is_polymorphic: false,
        injection_phase: None,
        tainted_by_errors: None,
        function_coverage_info: None,
    },
    checked_bbs: {
        bb0,
        bb1,
        bb5,
    },
    vars: [
        ValueUsage {
            mir_name: _0,
            decl: LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: (),
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:25:35: 25:35 (#0),
                    scope: scope[0],
                },
            },
            kind: Return,
            uses: [],
        },
        ValueUsage {
            mir_name: _1,
            decl: LocalDecl {
                mutability: Not,
                local_info: Set(
                    User(
                        Var(
                            VarBindingForm {
                                binding_mode: BindByValue(
                                    Not,
                                ),
                                opt_ty_info: Some(
                                    tests/ui/thesis/simple_main.rs:25:28: 25:34 (#0),
                                ),
                                opt_match_place: Some(
                                    (
                                        None,
                                        tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
                                    ),
                                ),
                                pat_span: tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
                            },
                        ),
                    ),
                ),
                ty: std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:25:21: 25:26 (#0),
                    scope: scope[0],
                },
            },
            kind: UserDef(
                "owned",
            ),
            uses: [],
        },
        ValueUsage {
            mir_name: _2,
            decl: LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: i32,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:26:5: 26:7 (#0),
                    scope: scope[0],
                },
            },
            kind: DiscardNonDrop,
            uses: [
                Assign(
                    _2 = const 17_i32,
                ),
            ],
        },
        ValueUsage {
            mir_name: _3,
            decl: LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:27:5: 27:18 (#0),
                    scope: scope[0],
                },
            },
            kind: DiscardNonDrop,
            uses: [
                AssignFromCall(
                    _3 = std::string::String::new() -> [return: bb1, unwind: bb5],
                ),
            ],
        },
        ValueUsage {
            mir_name: _4,
            decl: LocalDecl {
                mutability: Not,
                local_info: Set(
                    Boring,
                ),
                ty: usize,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:28:5: 28:16 (#0),
                    scope: scope[0],
                },
            },
            kind: Unknown,
            uses: [],
        },
        ValueUsage {
            mir_name: _5,
            decl: LocalDecl {
                mutability: Mut,
                local_info: Set(
                    Boring,
                ),
                ty: &ReErased std::string::String,
                user_ty: None,
                source_info: SourceInfo {
                    span: tests/ui/thesis/simple_main.rs:28:5: 28:10 (#0),
                    scope: scope[0],
                },
            },
            kind: Unknown,
            uses: [],
        },
    ],
}
bb0:
    StorageLive(_2)
    _2 = const 17_i32
    StorageDead(_2)
    StorageLive(_3)
    _3 = std::string::String::new() -> [return: bb1, unwind: bb5]

bb1:
    drop(_3) -> [return: bb2, unwind: bb5]

bb2:
    StorageDead(_3)
    StorageLive(_4)
    StorageLive(_5)
    _5 = &_1
    _4 = std::string::String::len(move _5) -> [return: bb3, unwind: bb5]

bb3:
    StorageDead(_5)
    StorageDead(_4)
    _0 = const ()
    drop(_1) -> [return: bb4, unwind: bb6]

bb4:
    return

bb5:
    drop(_1) -> [return: bb6, unwind terminate(cleanup)]

bb6:
    resume

# Variables
  _0: Return
  _1: UserDef("owned")
  _2: DiscardNonDrop
  _3: DiscardNonDrop
  _4: Unknown
  _5: Unknown


FAILURES:
    tests/ui/thesis/unsafe_transmute.rs
    tests/ui/thesis/simple_main.rs

test result: FAIL. 2 failed; 967 filtered out;

